// Place your key bindings in this file to override the defaults
[
  {
    "key": "alt+l",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "alt+h",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+i",
    "command": "-workbench.action.terminal.chat.start",
    "when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "ctrl+i",
    "command": "-workbench.action.chat.startVoiceChat",
    "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress"
  },
  {
    "key": "ctrl+i",
    "command": "-notebook.cell.chat.start",
    "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+i",
    "command": "-workbench.action.chat.holdToVoiceChatInChatView",
    "when": "chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inlineChatFocused && !notebookEditorFocused"
  },
  {
    "key": "ctrl+p",
    "command": "-extension.vim_ctrl+p",
    "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "key": "ctrl+i",
    "command": "-workbench.action.chat.stopListeningAndSubmit",
    "when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
  },
  {
    "key": "ctrl+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+i",
    "command": "-composer.startComposerPrompt"
  },
  {
    "key": "ctrl+shift+alt+o",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "ctrl+shift+u",
    "command": "typescript.removeUnusedImports"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorHasSelection && !editorReadonly"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.duplicateSelection",
    "when": "editorHasSelection && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+r",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+shift+c",
    "command": "editor.action.clipboardCopyAction"
  }
]
